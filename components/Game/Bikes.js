/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: ArtyomOganesyan (https://sketchfab.com/ArtyomOganesyan)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-chopper-aec69c979166446eb2c8e1503f570d26
Title: Low Poly Chopper
*/

import { useRef } from "react";
import { useGLTF } from "@react-three/drei";

let link = `${process.env.NEXT_PUBLIC_CDN}games/Battle Trap/`

// Will load from local public folder instead of CDN
if (process.env.NEXT_PUBLIC_MODEL_SOURCE == "LOCAL") {
    link = `/models/Player/`
}

export function LowPolyChopper(props) {

    const { nodes, materials } = useGLTF(`${link}low_poly_chopper.glb`);

    return (
        <group {...props} dispose={null}>
            <group
                position={[0, 145, 341.451]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={100}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.b_Material002_0.geometry}
                    material={materials["Material.002"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.b_Material001_0.geometry}
                    material={materials["Material.001"]}
                />
            </group>
            <group
                position={[0, 145, -338.549]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={100}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.f_Material002_0.geometry}
                    material={materials["Material.002"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.f_Material001_0.geometry}
                    material={materials["Material.001"]}
                />
            </group>
            <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.motorcycle_Material_0.geometry}
                    material={materials.Material}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.motorcycle_Material001_0.geometry}
                    material={materials["Material.001"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.motorcycle_Material002_0.geometry}
                    material={materials["Material.002"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.motorcycle_Material003_0.geometry}
                    material={materials["Material.003"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.motorcycle_Material004_0.geometry}
                    material={materials["Material.004"]}
                />
            </group>
        </group>
    );
}

export function LowPolyScooter(props) {

    const { nodes, materials } = useGLTF(`${link}low_poly_scooter.glb`);

    return (
        <group {...props} dispose={null}>
            <group
                position={[0.11, 1.386, -0.332]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={0.183}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_28.geometry}
                    material={materials.Body}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_29.geometry}
                    material={materials.cOLA}
                />
            </group>
            <group
                position={[0, 0.401, 0.067]}
                rotation={[-0.096, 0, Math.PI / 2]}
                scale={0.129}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_31.geometry}
                    material={materials.Body}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_32.geometry}
                    material={materials.tire}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_33.geometry}
                    material={materials.Cancap}
                />
            </group>
            <group
                position={[-0.006, 1.391, -0.451]}
                rotation={[0, 0, Math.PI / 2]}
                scale={0.217}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_37.geometry}
                    material={materials.Body}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_38.geometry}
                    material={materials.Cancap}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_39.geometry}
                    material={materials["Material.014"]}
                />
            </group>
            <group position={[-0.022, 0.847, -0.351]} rotation={[Math.PI / 2, 0, 0]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_43.geometry}
                    material={materials.Body}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_44.geometry}
                    material={materials.Cancap}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_24.geometry}
                material={materials["Material.018"]}
                scale={0.102}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_6.geometry}
                material={materials["Material.013"]}
                position={[0.109, 1.4, -0.609]}
                scale={0.066}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_22.geometry}
                material={materials["Material.015"]}
                position={[0.107, 0.819, 1.04]}
                scale={[0.116, 0.048, 0.048]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_8.geometry}
                material={materials["tire.001"]}
                position={[0.284, 0.31, 0.815]}
                rotation={[1.409, 0, 0]}
                scale={[-0.062, -0.281, -0.062]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_26.geometry}
                material={materials["Material.016"]}
                position={[0.216, 0.443, -0.843]}
                rotation={[-2.673, 0, -Math.PI]}
                scale={[-0.032, -0.196, -0.032]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_35.geometry}
                material={materials.Body}
                position={[0.115, 0.849, 0.865]}
                rotation={[0, 0, Math.PI / 2]}
                scale={[-0.261, -0.557, -0.261]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_16.geometry}
                material={materials["Material.018"]}
                position={[-0.057, 0.325, 0.41]}
                rotation={[0.273, 0, -Math.PI / 2]}
                scale={-0.103}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_41.geometry}
                material={materials.Body}
                position={[0.252, 0.702, -0.759]}
                rotation={[0, 0, Math.PI / 2]}
                scale={0.117}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_18.geometry}
                material={materials.tire}
                position={[0.087, 0.316, 0.141]}
                rotation={[0, 0, Math.PI / 2]}
                scale={[0.08, 0.09, 0.08]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_10.geometry}
                material={materials.Cancap}
                position={[0.344, 0.338, 1.032]}
                rotation={[-0.224, 0, Math.PI / 2]}
                scale={-0.063}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_20.geometry}
                material={materials.cOLA}
                position={[-0.036, 1.101, 0.537]}
                rotation={[0, 0, Math.PI / 2]}
                scale={[-0.109, -0.091, -0.333]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_12.geometry}
                material={materials.tire}
                position={[0.109, 0.312, -0.901]}
                rotation={[-0.236, 0, Math.PI / 2]}
                scale={0.465}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_14.geometry}
                material={materials["Material.019"]}
                position={[0.108, 0.309, -0.899]}
                rotation={[0, 0, Math.PI / 2]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_48.geometry}
                material={materials["Material.019"]}
                position={[0.108, 0.309, 0.808]}
                rotation={[0, 0, Math.PI / 2]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_46.geometry}
                material={materials.tire}
                position={[0.109, 0.312, 0.803]}
                rotation={[0, 0, Math.PI / 2]}
                scale={0.465}
            />
        </group>
    );
}

export function LowPolyTricycle(props) {

    const { nodes, materials } = useGLTF(`${link}low_poly_tricycle.glb`);

    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, Math.PI]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_2.geometry}
                    material={materials["black-plastic"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_3.geometry}
                    material={materials["green-plastic"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_4.geometry}
                    material={materials["grey-plastic"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_5.geometry}
                    material={materials.metal}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_6.geometry}
                    material={materials["orange-plastic"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_7.geometry}
                    material={materials["red-plastic"]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_8.geometry}
                    material={materials["yellow-plastic"]}
                />
            </group>
        </group>
    );
}

export function Unicycle(props) {

    const { nodes, materials } = useGLTF(`${link}unicycle.glb`);

    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Chasis_Material002_0.geometry}
                material={materials["Material.002"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Rim_Material_0.geometry}
                material={materials.Material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Tyre_Material_0.geometry}
                material={materials.Material}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Spokes001__0.geometry}
                material={materials["Spokes.001__0"]}
                position={[0, 0.083, 0.001]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Cylinder_Material001_0.geometry}
                material={materials["Material.001"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Ceat_Material001_0.geometry}
                material={materials["Material.001"]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Chasis001_Material001_0.geometry}
                material={materials["Material.001"]}
                position={[0, 1.174, 0.001]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Ceat_Grip_MCeatGrip_Mat_0.geometry}
                material={materials.MCeatGrip_Mat}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Rim001_Airpin_0.geometry}
                material={materials.Airpin}
                position={[0, -0.001, 0]}
            />
        </group>
    );
}

export function ToiletTricycle(props) {

    const { nodes, materials } = useGLTF(`${link}toilet_tricycle.glb`);

    return (
        <group {...props} dispose={null}>
            <group position={[0, 0, 2.182]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.pasted__pTorus4_Texture_0.geometry}
                    material={materials.Texture}
                    position={[-3.584, -0.068, -1.236]}
                    scale={0.903}
                />
            </group>
            <group position={[-12.82, 0.945, 1.148]} rotation={[0, 0, Math.PI]}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.pasted__pCylinder11_Texture_0.geometry}
                    material={materials.Texture}
                    position={[-6.41, 0.253, -0.935]}
                    rotation={[-1.567, 0, 0]}
                    scale={0.081}
                />
            </group>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.pTorus4_Texture_0.geometry}
                material={materials.Texture}
                position={[-3.584, -0.068, -1.236]}
                scale={0.903}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.pCylinder11_Texture_0.geometry}
                material={materials.Texture}
                position={[-6.41, 0.253, -0.935]}
                rotation={[-1.567, 0, 0]}
                scale={0.081}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.pCube9_Texture_0.geometry}
                material={materials.Texture}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface1_Texture_0.geometry}
                material={materials.Texture}
                position={[-0.016, 0, -0.474]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.polySurface4_Texture_0.geometry}
                material={materials.Texture}
                position={[-6.222, 0, 0.467]}
                rotation={[-Math.PI, 0, -Math.PI]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.pCube11_Texture_0.geometry}
                material={materials.Texture}
            />
        </group>
    );
}